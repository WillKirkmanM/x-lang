WHITESPACE = _{ " " | "\t" | "\r" | "\n" | COMMENT }
COMMENT = _{ "//" ~ (!NEWLINE ~ ANY)* ~ NEWLINE }

program = { SOI ~ statement* ~ EOI }
statement = { if_stmt | for_loop | function_def | (var_decl | import | expr) ~ ";" }

function_def = { "fn" ~ identifier ~ "(" ~ params? ~ ")" ~ block }
params = { identifier ~ ("," ~ identifier)* }
block = { "{" ~ statement* ~ "}" }

import = { "import" ~ module ~ "::" ~ item }
module = { identifier }
item = { identifier }

var_decl = { "let" ~ identifier ~ "=" ~ expr }
if_stmt = { "if" ~ expr ~ block ~ ("else" ~ block)? }
for_loop = { "for" ~ identifier ~ "in" ~ expr ~ ".." ~ expr ~ block }

expr = { term ~ (operator ~ term)* }
term = { function_call | number | identifier | string | "(" ~ expr ~ ")" }
function_call = { identifier ~ "(" ~ args? ~ ")" }
args = { expr ~ ("," ~ expr)* }

operator = @{ "<=" | ">=" | "==" | "!=" | "<" | ">" | "+" | "-" | "*" | "/" }
number = @{ "-"? ~ ASCII_DIGIT+ ~ ("." ~ ASCII_DIGIT+)? }
identifier = @{ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "_")* }
string = ${ "\"" ~ inner_str ~ "\"" }
inner_str = @{ char* }
char = {
    !("\"" | "\\") ~ ANY
    | "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
    | "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
}